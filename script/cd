#!/usr/bin/env bash

set -e

BRANCH_PREFIX="release"

parseTriggeringCommit() {
  if git show -s --format=%s | grep -q "^Merge pull request #[0-9][0-9]* from guardian/$BRANCH_PREFIX-[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$"; then
    echo "Latest commit was the merge of a release chore. No further action needed."
    exit 0
  fi
}

performCD() {
  npm ci
  npm run lint
  npm run build

  # this script edits package.json and package-lock.json, bumping the version number if necessary
  npm run release
}

checkForLocalChanges() {
  if git diff --quiet; then
    echo "New release not created. No further action needed."
    exit 0
  fi
}

createVersionBumpPullRequest() {
  GIT_EMAIL="guardian-ci@users.noreply.github.com"
  GIT_USERNAME="guardian-ci"

  git config --global user.email "$GIT_EMAIL"
  git config --global user.name "$GIT_USERNAME"
  git remote set-url origin "https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

  # get new version from edited package.json file
  NEXT_VERSION=$(jq -r '.version' < package.json)
  NEXT_VERSION_BRANCH="$BRANCH_PREFIX-$NEXT_VERSION"
  MESSAGE="chore(release): $NEXT_VERSION"

  git checkout -b "$NEXT_VERSION_BRANCH"
  git add package.json
  git add package-lock.json
  git commit -m "$MESSAGE"
  git push -u origin "$NEXT_VERSION_BRANCH"

  gh pr create --title "$MESSAGE" --body "keeping repository up to date"
}

main() {
  parseTriggeringCommit
  performCD
  checkForLocalChanges
  createVersionBumpPullRequest
}

main
